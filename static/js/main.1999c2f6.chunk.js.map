{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","App.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","PropType","PropTypes","string","isRequired","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1999c2f6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\"> Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\"> Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link\" to=\"/about\">About</Link> */}\r\n              </li>\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light'? 'dark' : 'light'}`}>\r\n              <input type=\"checkbox\" onClick={props.toggleMode} className=\"form-check-input\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">\r\n               {`Enable ${props.mode === 'light' ? 'dark' : 'light'} mode`}\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.PropType = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const copyText = () =>{\r\n        let text = document.getElementById('myBox');\r\n        text.select();\r\n        text.setSelectionRange(0, 9999);\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text copied\", \"success\")\r\n\r\n    }\r\n\r\n    const handleSpace = () =>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Spaces removed\", \"success\")\r\n\r\n    }\r\n\r\n    const clearText = () =>{\r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Text cleared\", \"success\")\r\n\r\n    }\r\n\r\n    const handleClick = () =>{\r\n        console.log(\"Upper case was clicked.\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase\", \"success\")\r\n    }\r\n\r\n    const handleloClick = () =>{\r\n        console.log(\"Upper case was clicked.\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase\", \"success\")\r\n\r\n    }\r\n\r\n    const handleOnChange = (event) =>{\r\n        console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n    \r\n    const [text, setText] = useState('Enter text here')\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode ==='dark'? 'white' : 'black' }}>\r\n        <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode ==='dark'? 'grey' : 'white', color: props.mode ==='dark'? 'white' : 'black' }} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleClick}>Conver to uppercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleloClick}>Conver to lowercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={clearText}>Clear Text</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={copyText}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleSpace}>remove spaces</button>\r\n                {/* <button className=\"btn btn-primary mx-2\" onClick={handleSpace}>Paste copied text</button> */}\r\n            </div>\r\n            <div className=\"container my-3\" style={{color: props.mode ==='dark'? 'white' : 'black' }}>\r\n                <h1>Your text summary</h1>\r\n                <p>{text.split(\" \").length} words and {text.length} characteres</p>\r\n                <p>{0.008 * text.split(\" \").length} Minute read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Enter something to preview here\"}</p>\r\n            </div>\r\n            </>\r\n            )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        \r\n           props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            {capitalize(props.alert.type)}: {props.alert.msg}\r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","\nimport './App.css';\n// import About from './component/About';\nimport Navbar from './component/Navbar';\nimport TextForm from './component/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './component/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n  \n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //weather dark mode is enabled or not \n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () =>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Dark mode';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Light mode';\n\n\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode}/>\n          {/* </Route> */}\n        {/* </Switch> */}\n    </div>\n        {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}